{"version":3,"file":"static/js/233.6f286873.chunk.js","mappings":"mTA8EA,EAlEkB,WAChB,OAA0BA,EAAAA,EAAAA,UAAS,CACjCC,MAAO,GACPC,SAAU,KAFZ,eAAOC,EAAP,KAAcC,EAAd,KAIMC,GAAcC,EAAAA,EAAAA,KAEdC,GAAWC,EAAAA,EAAAA,MAETP,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAEf,GAAIG,EACF,OAAO,SAAC,KAAD,CAAUI,GAAG,cAGtB,IAAMC,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEdT,GAAS,SAAAU,GAAS,yBACbA,GADa,cAEfF,EAAOC,GAFQ,GAInB,EAaD,OACE,UAACE,EAAA,EAAD,CAAMC,SAZa,SAAAC,GACnBA,EAAMC,iBAENX,GAASY,EAAAA,EAAAA,IAAMhB,IAEfC,EAAS,CACPQ,KAAM,GACNX,MAAO,GACPC,SAAU,IAEb,EAEC,WACE,UAACa,EAAA,QAAD,CAAYK,UAAU,OAAOC,UAAU,iBAAvC,WACE,SAACN,EAAA,QAAD,6BACA,SAACA,EAAA,UAAD,CACEO,KAAK,QACLT,MAAOZ,EACPW,KAAK,QACLW,YAAY,cACZC,SAAUd,QAId,UAACK,EAAA,QAAD,CAAYK,UAAU,OAAOC,UAAU,oBAAvC,WACE,SAACN,EAAA,QAAD,wBACA,SAACA,EAAA,UAAD,CACEO,KAAK,WACLT,MAAOX,EACPU,KAAK,WACLW,YAAY,WACZC,SAAUd,QAId,SAACe,EAAA,EAAD,CAAQC,QAAQ,UAAUJ,KAAK,SAA/B,qBAKL,EC3ED,EAAuB,wBCWvB,EARkB,WAChB,OACE,gBAAKF,UAAWO,EAAhB,UACE,SAAC,EAAD,KAGL,C","sources":["components/LoginForm/LoginForm.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport useAuth from 'shared/hooks/useAuth';\n\nimport { login } from 'redux/contacts/auth/authOperations';\n\nconst LoginForm = () => {\n  const [state, setState] = useState({\n    email: '',\n    password: '',\n  });\n  const isUserLogin = useAuth();\n\n  const dispatch = useDispatch();\n\n  const { email, password } = state;\n\n  if (isUserLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    dispatch(login(state));\n\n    setState({\n      name: '',\n      email: '',\n      password: '',\n    });\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control\n          type=\"email\"\n          value={email}\n          name=\"email\"\n          placeholder=\"Enter email\"\n          onChange={handleChange}\n        />\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          value={password}\n          name=\"password\"\n          placeholder=\"Password\"\n          onChange={handleChange}\n        />\n      </Form.Group>\n\n      <Button variant=\"primary\" type=\"submit\">\n        Login\n      </Button>\n    </Form>\n  );\n};\n\nexport default LoginForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginPage_form__h3Le9\"};","import LoginForm from 'components/LoginForm/LoginForm';\n\nimport s from './LoginPage.module.css';\n\nconst LoginPage = () => {\n  return (\n    <div className={s.form}>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["useState","email","password","state","setState","isUserLogin","useAuth","dispatch","useDispatch","to","handleChange","target","name","value","prevState","Form","onSubmit","event","preventDefault","login","className","controlId","type","placeholder","onChange","Button","variant","s"],"sourceRoot":""}